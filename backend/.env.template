# ==============================================
# FRAUD DETECTION SYSTEM - ENVIRONMENT VARIABLES
# ==============================================
# Copy this file to .env and fill in your actual values

# ==============================================
# DATABASE CONFIGURATION
# ==============================================
# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database_name?schema=public
DATABASE_URL="postgresql://your_username:your_password@localhost:5432/fraud_detector?schema=public"

# ==============================================
# AUTHENTICATION & SECURITY
# ==============================================
# JWT secret key for signing tokens (use a strong, random string)
# Generate with: openssl rand -base64 32
JWT_SECRET="your-super-secret-jwt-key-here"

# Session secret for cookie-based sessions
SESSION_SECRET="your-session-secret-key-here"

# ==============================================
# GOOGLE OAUTH 2.0 CONFIGURATION
# ==============================================
# Get these from Google Cloud Console:
# 1. Go to https://console.cloud.google.com/
# 2. Create a new project or select existing
# 3. Enable Google+ API
# 4. Create OAuth 2.0 credentials
# 5. Add authorized redirect URIs: http://localhost:3001/auth/google/callback

GOOGLE_CLIENT_ID="your-google-client-id.apps.googleusercontent.com"
GOOGLE_CLIENT_SECRET="your-google-client-secret"

# ==============================================
# AI SERVICES CONFIGURATION
# ==============================================
# Google Gemini AI API Key
# Get from: https://aistudio.google.com/app/apikey
GEMINI_API_KEY="your-gemini-api-key-here"

# ==============================================
# OPTIONAL CONFIGURATIONS
# ==============================================
# Port for backend server (default: 3001)
# PORT=3001

# Port for Python ML model (default: 5000)
# PYTHON_MODEL_PORT=5000

# Node environment (development, production)
# NODE_ENV=development

# ==============================================
# SETUP INSTRUCTIONS
# ==============================================
# 1. Copy this file to .env in the backend/ directory
# 2. Replace all placeholder values with your actual credentials
# 3. Make sure PostgreSQL is running and the database exists
# 4. Run: npx prisma migrate dev
# 5. Start the application with: npm run dev

# ==============================================
# SECURITY NOTES
# ==============================================
# - Never commit .env files to version control
# - Use strong, unique passwords and secrets
# - Regularly rotate API keys and secrets
# - Restrict database access to necessary IPs only
# - Keep your dependencies updated
