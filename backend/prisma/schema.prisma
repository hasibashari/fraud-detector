generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UploadBatch {
  id           String        @id @default(cuid())
  fileName     String
  status       BatchStatus   @default(PENDING)
  createdAt    DateTime      @default(now())
  userId       String
  transactions Transaction[]
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Transaction {
  id                String       @id @default(cuid())
  amount            Float // Required: Nilai transaksi
  timestamp         DateTime // Required: Waktu transaksi
  merchant          String // Required: Merchant/toko
  location          String? // Optional: Lokasi transaksi
  user_id           String? // Optional: ID pengguna
  transaction_type  String? // Optional: Jenis transaksi
  channel           String? // Optional: Channel transaksi
  device_type       String? // Optional: Tipe device
  isAnomaly         Boolean?     @default(false)
  anomalyScore      Float?
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  uploadBatchId     String?
  geminiExplanation String?
  UploadBatch       UploadBatch? @relation(fields: [uploadBatchId], references: [id])
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  name          String
  password      String
  googleId      String?       @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  uploadBatches UploadBatch[]
}

enum BatchStatus {
  PENDING
  COMPLETED
  FAILED
}
